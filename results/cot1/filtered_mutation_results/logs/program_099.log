[*] Start mutation process:
   - targets: datasets.GPT_4.Chain_of_thought1.programs.program_099
   - tests: datasets.GPT_4.Chain_of_thought1.tests.test_099
[*] 11 tests passed:
   - datasets.GPT_4.Chain_of_thought1.tests.test_099 [0.00105 s]
[*] Start mutants generation and execution:
   - [#   1] ASR datasets.GPT_4.Chain_of_thought1.programs.program_099: [0.00104 s] killed by test_1023 (datasets.GPT_4.Chain_of_thought1.tests.test_099.TestVersion)

Traceback (most recent call last):
  File "C:\Users\skaspers\OneDrive - Capgemini\Documents\Prompted Testsuite Analysis\.\datasets\GPT_4\Chain_of_thought1\tests\test_099.py", line 19, in test_1023
    def test_1023(self): self.assertEqual(count_Set_Bits(1023), 10)
AssertionError: -10 != 10

   - [#   2] COI datasets.GPT_4.Chain_of_thought1.programs.program_099: [0.00000 s] killed by test_1023 (datasets.GPT_4.Chain_of_thought1.tests.test_099.TestVersion)

Traceback (most recent call last):
  File "C:\Users\skaspers\OneDrive - Capgemini\Documents\Prompted Testsuite Analysis\.\datasets\GPT_4\Chain_of_thought1\tests\test_099.py", line 19, in test_1023
    def test_1023(self): self.assertEqual(count_Set_Bits(1023), 10)
AssertionError: 0 != 10

   - [#   3] LOR datasets.GPT_4.Chain_of_thought1.programs.program_099: [0.00000 s] killed by test_1023 (datasets.GPT_4.Chain_of_thought1.tests.test_099.TestVersion)

Traceback (most recent call last):
  File "C:\Users\skaspers\OneDrive - Capgemini\Documents\Prompted Testsuite Analysis\.\datasets\GPT_4\Chain_of_thought1\tests\test_099.py", line 19, in test_1023
    def test_1023(self): self.assertEqual(count_Set_Bits(1023), 10)
AssertionError: 2036 != 10

   - [#   4] LOR datasets.GPT_4.Chain_of_thought1.programs.program_099: [5.04099 s] timeout
[*] Mutation score [5.07267 s]: 100.0%
   - all: 4
   - killed: 3 (75.0%)
   - survived: 0 (0.0%)
   - incompetent: 0 (0.0%)
   - timeout: 1 (25.0%)
HI SANDER, RUNNING MUTPY FROM: C:\Users\skaspers\OneDrive - Capgemini\Documents\Prompted Testsuite Analysis\.venv38\lib\site-packages\mutpy\commandline.py
